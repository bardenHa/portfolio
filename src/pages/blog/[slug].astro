---
import { CollectionEntry, getCollection } from 'astro:content';

import { constants } from '@/config';
import Page from '@/lib/layouts/page.astro';
import { Anchor, Divider, MdxComponents, Typography } from '@/lib/components';
import { hyphenate } from '@/lib/utils';

export const getStaticPaths = async () => {
  const posts = await getCollection('posts');
  return posts.map(post => ({ params: { slug: post.slug }, props: post }));
};

const posts = (await getCollection('posts')).sort((a, z) => +new Date(z.data.date) - +new Date(a.data.date));
const post = Astro.props as CollectionEntry<'posts'>;
const tags = [...new Set(post.data.tags)].sort();
const { Content } = await post.render();

const index = posts.findIndex(({ id }) => id === post.id);
const prev = posts?.[index + 1];
const next = posts?.[index - 1];

// TODO: replace hardcodes links
const titleId = hyphenate(post.data.title);
---

<Page
  title={`${post.data.title} - ${constants.profile.name}`}
  description={post.data.description}
  keywords={`blog, post, ${tags.join(', ')}`}
  image={post.data.image ?? constants.blog.fallbackImage}
  type="article"
  date={post.data.date.toDateString()}
>
  <section class="mt-12" aria-labelledby={titleId}>
    <Typography.Display id={titleId}>{post.data.title}</Typography.Display>
    <Typography.Paragraph variant={'subdued'} size={'large'} class="mt-8">{post.data.description}</Typography.Paragraph>
    <Typography.Paragraph variant={'subdued'} size={'small'} class="mt-5">
      {
        post.data.date.toLocaleDateString('en-EN', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
        })
      }
    </Typography.Paragraph>
  </section>
  <Divider size={'large'} />
  <Content components={MdxComponents} />
  <Divider size={'large'} />
  <section aria-label="Blog post next actions">
    <div class="my-4 flex gap-4 sm:gap-6">
      <Anchor
        variant={'distinguished'}
        external
        href={`https://twitter.com/intent/tweet` +
          `?text=${post.data.title} — ${post.data.description}` +
          `&url=${constants.site}/blog/${post.slug}` +
          `&via=bardenha` +
          `&hashtags=${tags.join(',')}`}
      >
        Share on Twitter
      </Anchor>
      <Anchor
        variant={'distinguished'}
        external
        href={`https://twitter.com/search?q=${constants.site}/blog/${post.slug}&src=typed_query`}
      >
        Discuss on Twitter
      </Anchor>
    </div>
    <nav class="mt-4 flex justify-between gap-8">
      {
        prev && (
          <Anchor class="flex truncate rounded-sm" href={`/blog/${prev.slug}`}>
            <span class="mr-2">←</span>
            <span class="flex-1 truncate">{prev.data.title}</span>
          </Anchor>
        )
      }
      {
        next && (
          <Anchor class="flex truncate rounded-sm" href={`/blog/${next.slug}`}>
            <span class="flex-1 truncate">{next.data.title}</span>
            <span class="ml-2">→</span>
          </Anchor>
        )
      }
    </nav>
  </section>
</Page>
